{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,UAwB/B,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CA/BbN,EAAKC,KAAKa,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAIC,iBACJ,MACEC,UAAUC,OAAEA,EAAMC,KAAEA,EAAMb,MAAAc,IACxBL,EAAIM,cACR,IAAIC,EAAaC,OAAOH,EAAMI,OAC1BC,EAAYF,OAAOJ,EAAKK,OAE5B,IAAK,IAAIE,EAAI,EAAGA,EAAIR,EAAOM,MAAOE,GAAK,EACrCtB,EAAc,EAAIsB,EAAGJ,EAAaG,EAAYC,GAC3CC,MAAK,EAACtB,SAAEA,EAAQC,MAAEA,KACjBR,EAAA8B,OAAOC,QAAQ,uBAAqBxB,QAAiBC,SAAYwB,OAElE,EAAOzB,WAAUC,YAChBR,EAAA8B,OAAOG,QAAQ,sBAAoB1B,QAAeC,MAAU,IAGlEN,EAAKC,KAAK+B,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\nrefs.form.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(evt) {\n  evt.preventDefault();\n  const {\n    elements: { amount, step, delay },\n  } = evt.currentTarget;\n  let firstDelay = Number(delay.value);\n  let stepDelay = Number(step.value);\n\n  for (let i = 0; i < amount.value; i += 1) {\n    createPromise(1 + i, firstDelay + stepDelay * i)\n      .then(({ position, delay }) =>\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n      )\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n  refs.form.reset();\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","evt","preventDefault","elements","amount","step","delay1","currentTarget","firstDelay","Number","value","stepDelay","i","then","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.080cd065.js.map"}